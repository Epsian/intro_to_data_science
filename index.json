[{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/install_guide/git/","title":"git/GitHub","tags":[],"description":"","content":"Overview git is a tool for version control and collaboration. It is the tool used by data science teams big and small to keep track of code. Think of it like track changes in Word or Google docs, but for code files.\ngit on Windows Follow these step-by-step instructions if you\u0026rsquo;re installing Git on a Windows machine:\nFirst, launch a web browser, the image below shows the Microsoft Edge browser.\nNext, navigate to the following Git download URL in your browser https://git-scm/com/downloads.\nSelect \u0026ldquo;Windows\u0026rdquo; from the Downloads portion of the Git webpage. Git will display the following page and automatically being downloading the correct version of the Git software. If the download doesn\u0026rsquo;t start automatically, click on the \u0026ldquo;Click here to download manually link.\u0026rdquo;\nWhen the download is complete, open/Run the downloaded file (it may look different in different browsers).\nA screen will appear asking for permissions for the Git application to make changes to your device. Click on the Yes button.\nClick Next to accept the user license.\nLeave the default \u0026ldquo;Destination Location\u0026rdquo; unchanged (usually C:\\Program Files\\Git) and hit Next\nYou will see a screen like the one below asking you to \u0026ldquo;Select Components.\u0026rdquo; Leave all of the default components selected. You can also check the boxes next to \u0026ldquo;Additional Icons\u0026rdquo; and it\u0026rsquo;s sub-item, \u0026ldquo;On the Desktop\u0026rdquo; if you would like. Your completed configurations window should have the following components selected:\nAdditional Icons -\u0026gt; On the Desktop Windows Explorer integration -\u0026gt; Git Bash Here -\u0026gt; Git GUI Here Git LFS (Large File Support) Associate .git* configuration files with default text editor Associate .sh files to be run with Bash The next screen will ask you to \u0026ldquo;Select a Start Menu Folder.\u0026rdquo; Keep the default value of Git and hit Next.\nThanks to the UC Davis DataLab for being the basis of this guide.\n"},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/syllabus/","title":"Syllabus","tags":[],"description":"","content":" Course Description Course Structure Course Instructor Contacting Me Course Policies Required Materials Attendance Academic Honesty Code of Conduct Accommodation Grading Standards Based Grading Standards Final Grades Late Work Policy FAQ Course Description Introduction to Data Science (SDS 192) aims to equip students with the knowledge and tools to understand, critically evaluate, manipulate, and explain data. This is an introductory course, and no prior experience is necessary.1 Students will learn how to read and write code, but also how to create, organize, and collaborate on coding projects while critically examining the projects goals and data sources. We will be primarily use the R language, along with supplemental tools.\nCourse Structure Each week will follow the same basic structure. Monday and Wednesday classes will include lectures to introduce new concepts. Lecture will be followed by interactive problem sets designed to reinforce those concepts through active learning. Slides from lecture will be posted online after the class. The problem sets for any class will be \u0026ldquo;due\u0026rdquo; at the start of next class period when the answers will be released; I expect most problem sets can be completed in class the day they are given out. These problem sets do not contribute toward your grade. They are intended to reinforce material, and help you test your own understanding.\nFriday classes will be devoted to lab activities, project work time, or exams. Students are expected to come to class to work on these activities. Labs will comprise of longer and more involved problem sets incorporating topics from the current and prior weeks. Students will work on labs in groups of two to four people. Labs will be reviewed through GitHub Classroom where feedback will be provided. Alternatively, Friday class times can be used for in-class work on larger projects or in-class exams.\nFor a full list of assignments and due dates, please see the course schedule.\nThis is a 4-credit course, meaning that by federal guidelines, you should be spending about 9 hours per week on this course outside of class.\nCourse Instructor Headshot I am a sociologist that studies abuses of power in government. I earned my Ph.D.Â at the University of California, Davis in in sociology with a designated emphasis in computational social science. I combine computational methods such as social network analysis, natural language processing, geospatial analysis, and machine learning with open source and governmental data to uncover patterns of misfeasance and malfeasance by our public servants. From the political networks of politicians and prohibition gangsters to bias hidden in the text of academic recruitment, I use new methods to work on old problems of corruption and inequality.\nAt Smith College I am a visiting assistant professor in the Statistical \u0026amp; Data Sciences program. I have experience working with both United States and United Kingdom governmental organizations applying machine learning to real-world problems. In the UK I worked with the national lab for data science and machine learning, the Alan Turing Institute, on early detection systems in foster care to assure children were receiving adequate services. Meanwhile in the US I worked with the Internal Revenue Service to built a machine learning system that determined the credibility of incoming fraud reports.\nContacting Me Slack Office Hours You can send me a message on the course Slack workspace, and I will respond when I am able, typically within 24 hours during the work week. To message me, click the + button next to \u0026ldquo;Direct Messages\u0026rdquo; and search for my name. If your question is not sensitive in nature, consider putting it in the #coding-help or #course-help channel instead. There is a good chance one of your classmates will be able to answer before I can.\nYou can schedule a meeting with me on Calendly. Different times may have differing options for in-person/video call meetings. If you cannot find an open time slot, please message me for an appointment.\nCourse Policies Required Materials Students are not expected to buy any materials for this course. Data science is built on free and open collaboration, and there is no shortage of high quality learning material available. This reader, as well as all assignments, will likewise be freely available for all into the foreseeable future.\nStudents are required to have a working computer (preferably a laptop) and reliable internet connection for this course. Any reasonably recent computer should be sufficient, with the notable exception of Chromebooks. Chromebooks lack access to the majority of the tools used by data scientists, and thus it will be difficult to complete course assignments with one.\nIf you only have access to a Chromebook, please speak with me as soon as possible.\nAttendance I will not be taking attendance in this course, and you do not need to inform me when you will be absent. If you are sick, please stay home. Given the standards based grading system (discussed below), no single class, assignment, or even exam will negatively impact your grade. That said, I expect students to be present when possible. It will be very difficult to keep up with course material without consistent attendance.\nIf you miss a class, you should contact a peer to discuss what was missed, and check the course reader website for any upcoming deadlines. I won\u0026rsquo;t have the capacity this semester to re-deliver missed material in office hours.\nExams cannot be made up after the exam period has passed. If you have a known schedule conflict with an exam, please speak with me as soon as possible to arrange an alternative.\nAcademic Honesty Data science is inherently collaborative, so I fully expect students to collaborate with each other and reference online resources. However, all work that you submit must be your own. All students, staff, and faculty are bound by the Smith College Honor Code, which Smith has had since 1944:\nStudents and faculty at Smith are part of an academic community defined by its commitment to scholarship, which depends on scrupulous and attentive acknowledgement of all sources of information and honest and respectful use of college resources.\nSmith College expects all students to be honest and committed to the principles of academic and intellectual integrity in their preparation and submission of course work and examinations. All submitted work of any kind must be the original work of the student who must cite all the sources used in its preparation.\n-Smith Academic Honor Code Any cases of dishonesty or plagiarism will be reported to the Academic Honor Board. Examples of dishonesty or plagiarism include:\nSubmitting work completed by another student as your own. Copying and pasting text or code from sources without quoting and citing the author. Paraphrasing material from another source without citing the author. Failing to cite your sources correctly. Falsifying or misrepresenting information in submitted work. Paying another student or service to complete assignments for you. Learning to code is most similar to learning a new language; you will only learn by doing. No amount of rote copying will advance you beyond the most elementary levels of understanding. Please keep this in mind.\nCode of Conduct As participants in this course we are committed to making participation a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, or religion. Examples of unacceptable behavior by participants in this course include the use of sexual language or imagery, derogatory comments or personal attacks, trolling, public or private harassment, insults, or other unprofessional conduct.\nAs the instructor I have the right and responsibility to point out and stop behavior that is not aligned to this Code of Conduct. Participants who do not follow the Code of Conduct may be reprimanded for such behavior. Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the instructor.\nAll students and the instructor are expected to adhere to this Code of Conduct in all settings for this course: seminars, office hours, and over Slack.\nThis Code of Conduct is adapted from the Contributor Covenant.\nAccommodation Smith is committed to providing support services and reasonable accommodations to all students with disabilities. To request an accommodation, please register with the Disability Services Office at the beginning of the semester.\nGrading Standards Based Grading This course will be graded using a standards-based assessment system. This means that rather than assignments being graded based on the percentage of the questions you answered correctly, your responses will be compared against a pre-defined set of course standards and assigned a level of proficiency. You will have multiple opportunities over the course of the semester to showcase the depth of your understanding regarding these standards.\nAn important feature of mastery grading is how your understanding of a topic is totaled at the end of the semester. In traditional points style grading, an average is taken of all your assignments, and your final grade is represented by that average. This means all assignments are given equal consideration in your final grade.\nMean of\nA1-A5 In contrast, standards-based grading is only interested in your understanding of the material at the end of the course. This means that only your highest level of demonstrated proficiency is tallied. Functionally this means that only your best score is kept; all others are effectively forgotten. This allows you to safely engage with complicated topics early on, and have opportunities to show improvement without penalization. This also means if you master a concept early on, you do not need to worry about it for the remainder of the course.\nMax of\nA1-A5 A standards-based grading system carries a number of other benefits:\nLearning targets for the course are clearly defined from the outset, and every graded assignment will be directly tied to at least one standard. This should make it abundantly clear what skills and competencies I\u0026rsquo;m assessing on every assignment. There is no \u0026ldquo;busy work\u0026rdquo; with a standards-based system. No one assignment will make-or-break your grade. You have multiple opportunities to demonstrate fluency in a standard. This rewards students that take the time to practice and learn from their mistakes. It prioritizes student growth throughout the course of the semester. Assessments in a standards-based system are much clearer than in a point-based grading system. Saying that I\u0026rsquo;ve become proficient in data wrangling, joining, and visualizing means more than saying that I earned a 92.5 in my Introduction to Data Science course. A standards-based grading system makes it easier to monitor your progress towards a certain grade. Standards The following table lists all the standards you will be evaluated on in this course. There are 15 total standards, separated into 4 categories. Each standard states what conditions must be met to reach each proficiency level. There are four proficiency levels for each standard, each requiring more mastery of the material. These levels are inclusive, meaning to reach the 4th level, \u0026ldquo;Demonstrates Mastery\u0026rdquo; you must also meet all the requirements of level 3, \u0026ldquo;Meets Standard.\u0026rdquo;\nYou will have multiple opportunities in the course to demonstrate your understanding of each standard. Any assignment that is reviewed is an opportunity to increase your proficiency level in a standard. In addition to the four levels of proficiency, there is also an extra point available in each standard called \u0026ldquo;Individual Standard.\u0026rdquo; You may fulfill this requirement only on individual exams, but only need to reach the \u0026ldquo;Meets Standard\u0026rdquo; criteria on a topic to do so.\nYou can demonstrate proficiency in any reviewed assignment, but can only fulfill the \u0026ldquo;Individual Standard\u0026rdquo; criteria on an individual exam.\nStandard Does Not Meet Standard Progressing Toward Standard Meets Standard Demonstrates Mastery Individual Standard Data Importing Cannot import data or uses R Studio visual tools to import data. Manually organizes or modifies data before importing it into R. Can import raw data into R using the appropriate function for the data source. Can interface with APIs or other remote sources and import data directly into R. Data Cleaning Cleans data in a non-programmatic way. Can clean data programmatically on a cell-by-cell basis to prepare it for analysis. Can assign the correct common data types (logical, integer, numeric, factor, and string) to loaded data and understand the uses of each. Can clean data for analysis in a vectorized way. Can prepare data for advanced types (dates, time series, etc.). Can prepare data from non-traditional sources such as OCR or web scraping. Data Reshaping Formats data in a non-programmatic way. Can derive new measures from existing data and append it to dataframes. Can pivot data between wide and long formats, and can explain the use case of each. Can transition data between data frames and lists, and explain the applications of data in a list format. Data Aggregation \u0026amp; Subsetting Transforms data in a non-programmatic way. Creates multiple copies of data in several intermediate stages of transformation that are used for different steps of analysis. Can combine and split data sets using the appropriate merge or subset techniques. Can split or merge data sets using either SQL-like calls or approximate matching. Debugging Cannot resolve common errors. Can understand common error messages and their solutions. Uses error messages or print statements within their code to locate the causes of errors and resolve them. Uses R debugging tools to resolve errors in their own code or other code packages. Functions Copies-and-pastes similar code with small changes. Creates simple functions with consistent inputs. Creates simple functions that can handle novel inputs, with logic to handle the data appropriately. Creates complex functions that can handle arbitrary input. Includes built in error checking and warnings. Iteration Copies-and-pastes similar code several times within or between scripts. Uses for loops or apply functions to iterate through vector data to preform a single data manipulation. Can use either loops or apply functions to iterate over a vector of data and preform multi-step manipulations. Can use loops or apply functions and explain the use cases for each. Can iterate over complex data structures such as dataframes or lists. Visualization Structure Selects inappropriate formats for data visualization. Selects sub-optimal visualization formats or uses excessive visualizations where a single one would be sufficient. Selects suitable formats for data visualization (bar, line, boxplot, etc.) and can explain the reasoning behind that choice. Effectively mixes visualization formats or isolates individual elements to clearly communicate a message. Visualization Aesthetics Chooses visual cues and colors for purely aesthetic reasons without attention to data representation. Data visualizations attempt to represent underlying data, but use methods unsuited to the task which leave ambiguity for the viewer. Data visualizations use color, scale, and shapes effectively to differentiate and communicate underlying data. Data visualizations are highly customized with bespoke elements, such as callouts, to clearly communicate the message of the visualization. Aesthetics are sensitive to accessibility concerns. Visualization Context Produces data visualizations that are unclear, confusing, devoid of context, or impossible to understand without reading the text. Produces data visualizations with readable axis labels, units, and legends (where appropriate). Produces data visualizations that are clear and understandable with minimal text captions. Produces data visualizations that are self-contained and can be understood on their own without textual explanation. Data Ethics Does not consider or mention data ethics. Can articulate common pitfalls and relate them to the project at hand. Can raise concerns specific to the data or project. Considers and articulates relevant concerns related to the current project unprompted throughout the work cycle. Data Provenance \u0026amp; Documentation Does not investigate data sources prior to using. Confirms data types and scales using data documentation. Reads data documentation to understand data collection/generation and measurements. Either creates data documentation for used data, or includes notes in code to the data sources and explains potential pitfalls. Markdown Authors Markdown documents that do not compile. Authors Markdown documents that compile but either do not include necessary content or include unnecessary content. Authors Markdown documents that compile and contain all necessary content without unnecessary content. Authors Markdown documents that employ meaningful formatting to effectively communicate their message. Examples include but are not limited to effective cross-references, interactive elements, bespoke style customizations, accessible metadata, etc. Code Style Code style is inconsistent and/or lacks documentation. Code comments explain the broad strokes of intended behavior. Indentation is consistent and predictable. Consistently comments all code with clearly organized sections. Expected inputs and outputs are clearly explained. Breaks large code files into modular parts that can easily be called. Code is clearly commented, with standardized formatting and indentation. Code contains tests which will check for errors, and report those errors if they arise. Git/Github Does not use git for version control. Uses git and GitHub for version control and can contribute to group repositories with commits, pushes, and pulls. Uses git and GitHub effectively. Code commits are of appropriate size and commented well. Can branch and merge repositories while resolving any merge conflicts. Does not include sensitive files in commits. Uses Github effectively for collaboration. Can create issues, ask for review, and merge branches in a manner suitable for a collaborative environment. Final Grades Your completion of these standards will be converted into a final letter grade using the following process. Each of the 15 standards will be converted into a three point scale, with one point available for meeting the \u0026ldquo;Individual Standard\u0026rdquo; on an exam.\n0 Points. \u0026ldquo;Does Not Meet Standard\u0026rdquo; 1 Points. \u0026ldquo;Progressing Toward Standard\u0026rdquo; 2 Points. \u0026ldquo;Meets Standard\u0026rdquo; 3 Points. \u0026ldquo;Demonstrates Mastery\u0026rdquo; +1 Point. \u0026ldquo;Individual Standard\u0026rdquo; On this scale, there are 60 points total in the course (15 standards * 4 possible points). I will sum the highest level of proficiency you reach in each standard over the course of the semester to arrive at your final score. For example, if someone were to reach \u0026ldquo;Demonstrates Mastery\u0026rdquo; in all standards, but could never do so on an exam, they would receive 45 of 60 points (3 points * 15 standards). Similarly, if someone reaches \u0026ldquo;Meets Standard\u0026rdquo; in all topics, including on exams, but did not demonstrate mastery in any topic, they would likewise receive 45 of 60 points.\nThe summed points will be converted into letter grades using the following table.\nLetter Points A 57-60 A- 54-56 B+ 52-53 B 50-51 B- 48-49 C+ 46-47 C 44-45 C- 42-43 D+ 40-41 D 38-39 D- 37-36 F 0-35 Late Work Policy Assignments turned in late will not be reviewed, and will not be considered for demonstrating proficiency in course standards. Keep in mind missing an assignment will not hurt your grade in any way, rather it simply removes one chance for you to demonstrate your knowledge of course material. If you do not think you will be able to turn in an assignment by the deadline, you may request an extension. To do so, please send me a message explaining why you are unable to complete the assignment in the expected time frame. Extension requests must be made\u0026ndash;and accepted\u0026ndash;before the assignment due date.\nAfter the due date, late assignments will only be reviewed if there were emergency circumstances preventing you from turning the assignment in on time.\nFAQ This is a test\nIf this is your first course in the SDS department, you will also need to enroll in SDS 100.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/install_guide/","title":"Install Guide","tags":[],"description":"","content":"This is a test\n"},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/post/2022-06-21-hi-hugo/","title":"Hi Hugo","tags":[],"description":"","content":"Lorem Ipsum.\n"},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/","title":"Intro to Data Science","tags":[],"description":"","content":" Intro to Data Science Quick Links Resource Link Description Syllabus Quick access to all important course information. Moodle Grades and quizzes will be available on the course Moodle. Slack Main communication channel for the course. Spinelli Center The Spinelli Center offers drop-in tutoring hours in Sabin-Reed 301 or on Zoom. Overview Info Value Who Dr. Jared Joseph What SDS 192-03: Introduction to Data Science When Mondays 1:40-2:55pm; Wednesday/Friday 1:20-2:35pm Where Stoddard G2 Schedule Below is the tentative schedule for the course. While we will try to keep to this schedule, unanticipated situations (and mountain day) may require us to adjust. Each row is a class meeting, with the readings and assignments due on that day listed.\nWeek Date Topic Readings Due 1 9/5/2022 (Mon) No Class 1 9/7/2022 (Wed) Introduction 1 9/9/2022 (Fri) What is Data? Class Syllabus Welcome Survey Data Survey Install Slack and join the class workspace 2 9/12/2022 (Mon) Install Day 2 9/14/2022 (Wed) Intro to R/R Studio All Software Installed 2 9/16/2022 (Fri) LAB 3 9/19/2022 (Mon) Markdown/Quatro 3 9/21/2022 (Wed) Intro to git/GitHub 3 9/23/2022 (Fri) LAB 4 9/26/2022 (Mon) Exploratory Data Analysis 4 9/28/2022 (Wed) Base R Plotting 4 9/30/2022 (Fri) LAB 5 10/3/2022 (Mon) Data Wrangling 1 5 10/5/2022 (Wed) Data Wrangling 2 5 10/7/2022 (Fri) LAB 6 10/10/2022 (Mon) No Class 6 10/12/2022 (Wed) Recap 6 10/14/2022 (Fri) Exam/Major Project 1 7 10/17/2022 (Mon) Advanced Plotting 7 10/19/2022 (Wed) Functions 7 10/21/2022 (Fri) LAB 8 10/24/2022 (Mon) Iteration 8 10/26/2022 (Wed) R Debugging Tools 8 10/28/2022 (Fri) LAB 9 10/31/2022 (Mon) Bash 9 11/2/2022 (Wed) Advanced git/GitHub 9 11/4/2022 (Fri) LAB 10 11/7/2022 (Mon) Data Cleaning 10 11/9/2022 (Wed) Recap 10 11/11/2022 (Fri) Exam/Major Project 2 11 11/14/2022 (Mon) Remote Servers \u0026amp; APIs 11 11/16/2022 (Wed) Web Scraping 11 11/18/2022 (Fri) LAB 12 11/21/2022 (Mon) SQL 12 11/23/2022 (Wed) No Class 12 11/25/2022 (Fri) No Class 13 11/28/2022 (Mon) Text as Data 13 11/30/2022 (Wed) Networks as Data 13 12/2/2022 (Fri) Geospatial Data 14 12/5/2022 (Mon) Finals Planning/Lessons Learned 14 12/7/2022 (Wed) Mountain Day Saftey Net/Flex 14 12/9/2022 (Fri) Finals Work 15 12/12/2022 (Mon) Finals Presentations/aRt Gallery "},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/post/","title":"Posts","tags":[],"description":"","content":""},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/post/2020-12-01-r-rmarkdown/","title":"Hello R Markdown","tags":["R Markdown","plot","regression"],"description":"","content":" R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932 Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA ) Figure 1: A fancy pie chart. "},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/tags/plot/","title":"plot","tags":[],"description":"","content":""},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/categories/r/","title":"R","tags":[],"description":"","content":""},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/tags/r-markdown/","title":"R Markdown","tags":[],"description":"","content":""},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/tags/regression/","title":"regression","tags":[],"description":"","content":""},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"https://intro-to-data-science-template.github.io/intro_to_data_science_reader/credits/","title":"Credits","tags":[],"description":"","content":"Content Thank you to Dr. Lindsay Poirier and Dr. Ben Baumner for providing their materials as reference as I prepared this course reader.\nBackend Thanks to the Hugo projects for providing the infrastructure for this site. Thank you to the team that created Hugo Learn Theme, the basis of this reader.\nPackages and libraries mermaid - generation of diagram and flowchart from text in a similar manner as markdown font awesome - the iconic font and CSS framework jQuery - The Write Less, Do More, JavaScript Library lunr - Lunr enables you to provide a great search experience without the need for external, server-side, search services\u0026hellip; horsey - Progressive and customizable autocomplete component clipboard.js - copy text to clipboard highlight.js - Javascript syntax highlighter modernizr - A JavaScript toolkit that allows web developers to use new CSS3 and HTML5 features while maintaining a fine level of control over browsers that don\u0026rsquo;t support "}]